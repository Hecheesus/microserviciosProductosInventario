version: '3.8'

services:
  # Base de datos MySQL para Productos
  mysql-productos:
    image: mysql:8.0
    container_name: mysql-productos
    environment:
      MYSQL_DATABASE: productos_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: productos_user
      MYSQL_PASSWORD: productos_pass
    ports:
      - "3307:3306"
    volumes:
      - mysql-productos-data:/var/lib/mysql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base de datos MySQL para Inventario
  mysql-inventario:
    image: mysql:8.0
    container_name: mysql-inventario
    environment:
      MYSQL_DATABASE: inventario_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: inventario_user
      MYSQL_PASSWORD: inventario_pass
    ports:
      - "3308:3306"
    volumes:
      - mysql-inventario-data:/var/lib/mysql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservicio de Productos
  productos-service:
    build:
      context: ./productos-service
      dockerfile: Dockerfile
    container_name: productos-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-productos:3306/productos_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: productos_user
      SPRING_DATASOURCE_PASSWORD: productos_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8081
      API_KEY: productos-api-key-2024
    depends_on:
      mysql-productos:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Microservicio de Inventario
  inventario-service:
    build:
      context: ./inventario-service
      dockerfile: Dockerfile
    container_name: inventario-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-inventario:3306/inventario_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: inventario_user
      SPRING_DATASOURCE_PASSWORD: inventario_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8082
      API_KEY: inventario-api-key-2024
      PRODUCTOS_SERVICE_URL: http://productos-service:8081
      PRODUCTOS_SERVICE_API_KEY: productos-api-key-2024
    depends_on:
      mysql-inventario:
        condition: service_healthy
      productos-service:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  microservices-network:
    driver: bridge

volumes:
  mysql-productos-data:
  mysql-inventario-data:
